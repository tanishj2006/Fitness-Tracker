package f1;

import java.awt.Color;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

public class Profile extends JDialog {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(Profile.class.getName());

    private String userName;
    private String userHeight;
    private String userWeight;
    private final int currentUserId; 
    
    public Profile(JFrame owner, int userId) {
        super(owner, "User Profile", true); 
        this.currentUserId = userId;
        
        loadUserData();  
        setupDialogUI();
    }
    
    private void loadUserData() {
        String sql = "SELECT name, height, weight FROM users WHERE id = ?";
        try (Connection conn = db.DBConnection.getConnection();
             PreparedStatement ps = conn.prepareStatement(sql)) {
            
            ps.setInt(1, currentUserId);
            ResultSet rs = ps.executeQuery();
            
            if (rs.next()) {
                userName = rs.getString("name");
                userHeight = rs.getString("height");
                userWeight = rs.getString("weight");
            } else {
                userName = "Unknown";
                userHeight = "-";
                userWeight = "-";
                JOptionPane.showMessageDialog(this, "User not found!");
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error fetching user data!");
            userName = "Error";
            userHeight = "-";
            userWeight = "-";
        }
    }
    
    
    private void setupDialogUI() {
        setSize(300, 250);
        setLocationRelativeTo(getOwner()); 
        setLayout(new GridBagLayout());
        getContentPane().setBackground(Color.WHITE); 

        Font labelFont = new Font("SansSerif", Font.BOLD, 14);
        Font valueFont = new Font("SansSerif", Font.PLAIN, 14);
        
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.insets = new Insets(10, 10, 10, 10);
        gbc.anchor = GridBagConstraints.WEST;
        
        // Title
        JLabel title = new JLabel("Your Profile Details");
        title.setFont(new Font("SansSerif", Font.BOLD, 18));
        gbc.gridx = 0; gbc.gridy = 0; gbc.gridwidth = 2;
        gbc.anchor = GridBagConstraints.CENTER;
        add(title, gbc);
        
        gbc.gridwidth = 1;
        gbc.anchor = GridBagConstraints.WEST;

        // Name
        addRow("Name:", userName, labelFont, valueFont, gbc, 1);
        addRow("Height:", userHeight, labelFont, valueFont, gbc, 2);
        addRow("Weight:", userWeight, labelFont, valueFont, gbc, 3);

        pack(); 
    }
    
    private void addRow(String label, String value, Font labelFont, Font valueFont, GridBagConstraints gbc, int row) {
        JLabel lbl = new JLabel(label);
        lbl.setFont(labelFont);
        gbc.gridx = 0; gbc.gridy = row;
        add(lbl, gbc);
        
        JLabel val = new JLabel(value);
        val.setFont(valueFont);
        gbc.gridx = 1; gbc.gridy = row;
        add(val, gbc);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        int testUserId = 1; 
        Profile dialog = new Profile(null, testUserId);
        dialog.setVisible(true);
    }
 }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
